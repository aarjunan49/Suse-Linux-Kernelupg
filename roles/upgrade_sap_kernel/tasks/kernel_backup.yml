---
######################################################
# Prepare directory on managed node to backup kernel
######################################################
- name: Check dir {{ upgsapkrn_dir_extracted_sar_managednode }} to backup kernel
 # become_user: "{{ upgsapkrn_input_sap_adm }}"
  become: yes
  file:
    path: "{{ upgsapkrn_dir_kernel_backup_managednode }}"
    state: absent
    owner: "{{ upgsapkrn_input_sap_adm }}"
    group: "{{ upgsapkrn_input_sap_sys }}"
    mode: 0775
- name: Check directory {{ upgsapkrn_dir_kernel_backup_managednode }}
 # become_user: "{{ upgsapkrn_input_sap_adm }}"
  become: yes
  file:
    path: "{{ upgsapkrn_dir_kernel_backup_managednode }}"
    state: directory
    owner: "{{ upgsapkrn_input_sap_adm }}"
    group: "{{ upgsapkrn_input_sap_sys }}"
    mode: 0775
######################################################
# Create backup on managed node
######################################################
- name: Create backup into dir {{ upgsapkrn_dir_kernel_backup_managednode }}
  become_user: "{{ upgsapkrn_input_sap_adm }}"
  become: yes
  shell: "cp -rp {{ upgsapkrn_dir_upgrade_kernel }}/* {{ upgsapkrn_dir_kernel_backup_managednode }}"
  environment:
    LIBPATH: "{{ upgsapkrn_dir_kernel_backup_managednode }}"
  args:
    chdir: "{{ upgsapkrn_dir_kernel_backup_managednode }}"
  register: result_files
  failed_when: result_files.rc >= 2